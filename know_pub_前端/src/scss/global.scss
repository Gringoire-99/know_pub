@import "constant";

@mixin clickable($color:$blue) {
  cursor: pointer;
  &:hover {
    color: lighten($color, 20%);
  }
}

@mixin clickEffect($color:$blue,$scale:0.99) {
  @include clickable($color);
  &:active {
    transform: scale($scale);
  }
  &:not(:active) {
    transform: scale(1);
  }
}

@mixin align($d:flex,$fw:nowrap,$jc:center,$ai:center,$fd:row) {
  display: $d;
  justify-content: $jc;
  align-items: $ai;
  flex-wrap: $fw;
  flex-direction: $fd;
}

@mixin textButton($color:$blue,$fs:$fs-medium) {
  border: none;
  background: none;
  color: $color;
  font-size: $fs;
  @include clickable($color);
}

@mixin clearDefault() {
  border: none;
  background: none;
  outline: none;
  padding: 0;
  margin: 0;
  text-decoration: none;
  list-style: none;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  cursor: inherit;
  &:is(:active,:hover,:focus) {
    color: inherit;
  }
}

@mixin hoverFloat($duration:0.1s,$y:-3px) {
  &:hover {
    transform: translateY($y);
  }
  &:not(:hover) {
    transition-duration: $duration+0.2s;
  }
  & {
    transform: perspective(1px) translateZ(0);
    box-shadow: 0 0 1px rgba(0, 0, 0, 0);
    transition-duration: $duration;
    transition-property: transform;
    transition-timing-function: ease-out;
  }
}

@mixin hoverUnderLine($position:left,$duration:0.3s,$color:#2098D1) {
  $left: 0;
  $right: 0;
  display: inline-block;
  vertical-align: middle;
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
  &:before {
    content: "";
    position: absolute;
    z-index: -1;
    bottom: 0;
    background: $color;
    height: 4px;
    transition-property: right, left;
    transition-duration: $duration;
    transition-timing-function: ease-out;
  }
  @if ($position == left) {
    $left: 0%;
    $right: 100%;
  } @else if ($position == center) {
    $left: 51%;
    $right: 51%;
  } @else if ($position == right) {
    $left: 100%;
    $right: 0%;
  }
  &:before {
    left: $left;
    right: $right;
  }
  &:hover:before, &:focus:before, &:active:before {
    right: 0;
    left: 0;
  }
}

@mixin animated($duration:1s) {
  animation-duration: $duration;
  animation-fill-mode: both;
}

@mixin a-fadeIn($reverse:false,$duration:1s,$x:0,$y:0,$z:0) {
  @include animated($duration);

  @if ($reverse) {
    animation-direction: reverse;
  }
  animation-name: fadeIn;

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translate3d($x, $y, $z);
    }

    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }
}

@mixin fade($name:v,$duration:1s,$x:0,$y:0,$z:0,$reverse:true) {
  .#{$name} {
    &-enter-active {
      @include a-fadeIn(false, $duration, $x, $y, $z);
    }

    @if ($reverse) {
      &-leave-active {
        @include a-fadeIn(true, $duration, $x, $y, $z);
      }
    }
  }
}


@mixin zoomIn($reverse:false,$duration:1s,$x:0.3,$y:0.3,$z:0.3) {
  @include animated($duration);

  @if ($reverse) {
    animation-direction: reverse;
  }
  animation-name: zoom;

  @keyframes zoom {
    from {
      opacity: 0;
      transform: scale3d($x, $y, $z);
    }

    50% {
      opacity: 1;
    }

  }
}

@mixin zoom($name:v,$duration:1s,$x:0.3,$y:0.3,$z:0.3,$reverse:true) {
  .#{$name} {
    &-enter-active {
      @include zoomIn(false, $duration, $x, $y, $z);
    }

    @if ($reverse) {
      &-leave-active {
        @include zoomIn(true, $duration, $x, $y, $z);
      }
    }

  }
}
